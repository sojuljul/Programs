Talking points
- how will the customer store their history
- 

void displayInventory(){
	create pointer to Movie vector object
	while(count < numMovieTypes){
		get head pointer from vector
		while(current != NULL){
			output the object info
			move current to next object
		}
	}
}

void displayHistory(int customer){
	searchIndex = customerId%10;
	access the hashtable at searchIndex (TBD)
	get the pointer to the first node in the hashtable
	while (current != NULL && current-ID != customer){
		move current to next object
	}
	if(current is NULL){
		"customer not found"
	} else {
		display customer's history
	}
	
}

void borrowItem(customerID, mediaType, movieType, movieData){

	
	
	access the proper vector based on the media type
	access the vector at the given genre (movieType)
	get the pointer to the head node
	while (current != NULL && movieData != movie){
		move current to next object
	}
	if(current is NULL){
		"movie not found"
	} else if(no copies left){
		"no copies left"
		if(classic){
			find same movie title
		}
	} else {
		decrease inventory 
	}
	
	access the hashtable at correct index (TBD)
	get the pointer to the first node in the hashtable
	while (current != NULL && current->ID != customer){
		move current to next object
	}
	if(current is NULL){
		"customer not found"
	} else {
		update customer history
	}
}

void returnItem(customerID, mediaType, movieType, movieData){
	
	access the customer hashtable at correct index (TBD)
	get the pointer to the first node in the hashtable
	while (current != NULL && current-ID != customer){
		move current to next object
	}
	if(current is NULL){
		"customer not found"
	} else {
		if(customer borrowed movie)
			update customer history
		else {
			"error"
			end
		}
	}
	
	access the proper vector based on the media type
	access the vector at the given genre (movieType)
	get the pointer to the head node
	while (current != NULL && movieData != movie){
		move current to next object
	}
	if(current is NULL){
		"movie not found"
	} else {
		increase inventory 
	}
	
	
}